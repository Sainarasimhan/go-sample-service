syntax = "proto3";

package pb;

import "pb/valid.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";

option go_package = "./pb";


// TODO - Change service to use this PROTO file, which has proper resource/collection URL mappings
// resource structure - can have properties, sub resources
message Sample {
    int32 ID       = 1;
    string Param1  = 2 [(valid.required) = true, (valid.lmin) = 1, (valid.lmax) = 10];
    string Param2  = 3 [(valid.required) = true, (valid.lmin) = 1, (valid.lmax) = 50];
    string Param3  = 4 [(valid.required) = true, (valid.lmin) = 1, (valid.lmax) = 100];
}

message Samples {
    repeated Sample samples = 1;
}

message CreateSampleRequest {
    Sample sample = 1;
    // Other Fields
    string TransID = 2 [(valid.required) = true];
}

message ListSamplesRequest {
    //fields with options like range, any start/end combination.
    string TransID = 1 [(valid.required) = true];
}

message GetSampleRequest { // Get Specific Sample with ID
    int32 ID       = 1 [(valid.required) = true];
    string TransID = 2 [(valid.required) = true];
}

service SampleService {
    rpc Create (CreateSampleRequest) returns(google.protobuf.Empty) { //Can return the created entry
    };
    rpc List (ListSamplesRequest) returns(Samples) {
    };
    rpc ListStream (ListSamplesRequest) returns (stream Sample) {};
    rpc Get (GetSampleRequest) returns(Sample) {
        option (google.api.http) = {
            get: "/V1/Sample/{ID}"
        };
    };
    /*
    rpc Update () {};
    rpc Delete () {};
    */
}
